<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.hoin.boardStudy.board.mapper.BoardMapper">

    <resultMap id="boardMap" type="board">
        <result column="board_id" property="boardId"/>
        <result column="writer" property="writer"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="view_count" property="viewCount"/>
        <result column="reg_date" property="regDate"/>
        <result column="upd_date" property="updDate"/>
        <result column="del_date" property="delDate"/>
    </resultMap>

    <resultMap id="fileMap" type="file">
        <result column="file_id" property="fileId"/>
        <result column="board_id" property="boardId"/>
        <result column="original_name" property="originalName"/>
        <result column="save_name" property="saveName"/>
        <result column="size" property="size"/>
        <result column="extension" property="extension"/>
        <result column="path" property="path"/>
    </resultMap>


    <!--게시판 목록 전체 조회하기-->
    <select id="getBoardList" parameterType="map" resultMap="boardMap">
        SELECT *
        FROM TBL_BOARD
        ORDER BY board_Id DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <!--게시물 총 개수 조회하기-->
    <select id="getTotalCount" resultType="int">
            SELECT count(*)
            FROM TBL_BOARD
    </select>

    <!--게시판 상페 페이지-->
    <select id="getDetail" resultMap="boardMap" parameterType="int">
        SELECT board_id,
               writer,
               title,
               content,
               view_count,
               reg_date,
               upd_date
        FROM TBL_BOARD
        WHERE board_id = #{boardId}
    </select>

    <!--조회수 기능-->
    <update id="increaseViewCount" parameterType="int">
        UPDATE TBL_BOARD
        SET view_count = view_count + 1
        WHERE board_id = #{boardId}
    </update>

    <!--글 저장-->
    <insert id="saveBoard" parameterType="board">
        insert into TBL_BOARD
            (board_id, writer, title, content, reg_date)
        values (#{boardId},#{writer},#{title},#{content},#{updDate})
            on duplicate key
        update
            title = #{title},
            content = #{content},
            upd_date = #{updDate}
    </insert>

    <!-- 파일 업로드 -->
    <insert id="saveFile" parameterType="fileInfo">
        <selectKey resultType="int" keyProperty="boardId" order="BEFORE">
            SELECT MAX(BOARD_ID) FROM TBL_BOARD
        </selectKey>
        insert into TBL_FILE
            (board_id, original_name, save_name, size, extension, reg_date)
        values (#{boardId}, #{originalName}, #{saveName}, #{size}, #{extension}, #{regDate})
    </insert>

    <!--파일 수정-->
    <insert id="modifyFile" parameterType="fileInfo">
        <if test="fileId!=0">
            insert into TBL_FILE
                (file_id, board_id, original_name, save_name, size, extension, reg_date)
            values (#{fileId},#{boardId}, #{originalName}, #{saveName}, #{size}, #{extension}, #{regDate})
        </if>
        <if test="fileId==0">
            insert into TBL_FILE
            (board_id, original_name, save_name, size, extension, reg_date)
            values (#{boardId}, #{originalName}, #{saveName}, #{size}, #{extension}, #{regDate})
        </if>
        on duplicate key
        update
            original_name = #{originalName},
            save_name = #{saveName},
            size = #{size},
            extension = #{extension},
            reg_date = #{regDate}
    </insert>

    <!-- 전체 파일 정보 불러오기 -->
    <select id="getFiles" parameterType="int" resultType="fileInfo">
        SELECT file_id as fileId, board_id as boardId, original_name as originalName, save_name as saveName, size, extension
        FROM TBL_FILE
        WHERE BOARD_ID = #{boardId}
    </select>

    <!-- 선택 파일 정보 불러오기 -->
    <select id="getFileInfo" parameterType="int" resultType="fileInfo">
        SELECT file_id as fileId, board_id as boardId, original_name as originalName, save_name as saveName, size, extension
        FROM TBL_FILE
        WHERE FILE_ID = #{fileId}
    </select>

    <!--글 삭제-->
    <delete id="deleteBoard">
        DELETE FROM TBL_BOARD
        WHERE board_id = #{boardId}
    </delete>

    <!--파일 삭제-->
    <delete id="deleteFile">
        DELETE FROM TBL_FILE
        WHERE FILE_ID = #{fileId}
    </delete>

    <!--작성자 정보 구하기-->
    <select id="getWriter" parameterType="int" resultType="user">
        SELECT *
        FROM TBL_USER
        WHERE user_id = (
            SELECT writer from TBL_BOARD
            WHERE board_id = #{boardId}
        )
    </select>

</mapper>